//---------------------------------------------------------------------------------------
// Copyright (c) 2001-2021 by PDFTron Systems Inc. All Rights Reserved.
// Consult legal.txt regarding legal and license information.
//---------------------------------------------------------------------------------------


const { PDFNet } = require('@pdftron/pdfnet-node');
const PDFTronLicense = require('../LicenseKey/LicenseKey');

((exports) => {

  exports.runContentReplacer = () => {

    const main = async() => {
      const inputPath = '../TestFiles/';
      const outputPath = inputPath + 'Output/';

      try {
        const inputFilename = 'BusinessCardTemplate.pdf';
        const outputFilename = 'BusinessCard.pdf';

        const doc = await PDFNet.PDFDoc.createFromFilePath(inputPath + inputFilename);
        doc.initSecurityHandler();

        const replacer = await PDFNet.ContentReplacer.create();
        const page = await doc.getPage(1);
        const img = await PDFNet.Image.createFromFile(doc, inputPath + 'peppers.jpg');

        const region = await page.getMediaBox();
        const replace = await img.getSDFObj();
        await replacer.addImage(region, replace);
        await replacer.addString('NAME', 'John Smith');
        await replacer.addString('QUALIFICATIONS', 'Philosophy Doctor');
        await replacer.addString('JOB_TITLE', 'Software Developer');
        await replacer.addString('ADDRESS_LINE1', '#100 123 Software Rd');
        await replacer.addString('ADDRESS_LINE2', 'Vancouver, BC');
        await replacer.addString('PHONE_OFFICE', '604-730-8989');
        await replacer.addString('PHONE_MOBILE', '604-765-4321');
        await replacer.addString('EMAIL', 'info@pdftron.com');
        await replacer.addString('WEBSITE_URL', 'http://www.pdftron.com');
        await replacer.process(page);

        await doc.save(outputPath + outputFilename, PDFNet.SDFDoc.SaveOptions.e_remove_unused);

        console.log('Done. Result saved in ' + outputFilename);
      } catch (err) {
        console.log(err);
      }
      try {
        const inputFilename = 'newsletter.pdf';
        const outputFilename = 'ContentReplaced.pdf';

        const doc = await PDFNet.PDFDoc.createFromFilePath(inputPath + inputFilename);
        doc.initSecurityHandler();

        const replacer = await PDFNet.ContentReplacer.create();
        const page = await doc.getPage(1);
        const region = await page.getMediaBox();
        await replacer.addText(region, 'hello hello hello hello hello hello hello hello hello hello');
        await replacer.process(page);

        await doc.save(outputPath + outputFilename, PDFNet.SDFDoc.SaveOptions.e_remove_unused);

        console.log('Done. Result saved in ' + outputFilename);
      } catch (err) {
        console.log(err);
      }
      try {
        const inputFilename = 'CI2022.pdf';
        const outputFilename = 'TestForm.pdf';

        const doc = await PDFNet.PDFDoc.createFromFilePath(inputPath + inputFilename);
        doc.initSecurityHandler();

        const replacer = await PDFNet.ContentReplacer.create();
        const page = await doc.getPage(1);
        
        await replacer.addString('date', '010101');
        await replacer.addString('assignedsa', 'assignedsa');
        await replacer.addString('name', 'name');
        await replacer.addString('gender', 'gender');
        await replacer.addString('telephone', 'phone');
        await replacer.addString('address', 'address');
        await replacer.addString('birthday', 'birthday');
        await replacer.addString('email', 'email');
        await replacer.addText(await PDFNet.Rect.init(210, 450, 575, 540), 'asfjwalfja\r\naslkfjnhaslifjga\r\naslkgjaklsjg\r\nasklfjilasjf');
        await replacer.addText(await PDFNet.Rect.init(210, 400, 575, 440), 'Den overstående model fremviser, hvorda programmet er bleve udviklet. Her ser man et trelagsstruktureret program i en ”three-tier-model”. Modellen er blevet tilvalgt, fordi den');
        await replacer.addText(await PDFNet.Rect.init(210, 260, 310, 310), 'Den overstående model fremviser, hvorda programmet z  z z z z z z  z z z z z z z z  z z z z  z z z z z z  z< z< z z ');
        await replacer.addText(await PDFNet.Rect.init(210, 190, 310, 240), 'Den overstående model fremviser, hvorda programmet z  z z z z z z  z z z z z z z z  z z z z  z z z z z z  z< z< z z ');
        await replacer.addText(await PDFNet.Rect.init(312, 190, 435, 285), 'Den overstående model fremviser, hvorda programmet z  z z z z z z  z z z z z z z z  z z z z  z z z z z z  z< z< z z ');
        await replacer.addText(await PDFNet.Rect.init(445, 190, 570, 285), 'Den overstående model fremviser, hvorda programmet z  z z z z z z  z z z z z z z z  z z z z  z z z z z z  z< z< z z ');
        await replacer.process(page);

        await doc.save(outputPath + outputFilename, PDFNet.SDFDoc.SaveOptions.e_remove_unused);

        console.log('Done. Result saved in ' + outputFilename);
      } catch (err) {
        console.log(err);
      }
      console.log('Done.');
    };
    PDFNet.runWithCleanup(main, PDFTronLicense.Key).catch(function(error){console.log('Error: ' + JSON.stringify(error));}).then(function(){return PDFNet.shutdown();});
  };
  exports.runContentReplacer();
})(exports);
// eslint-disable-next-line spaced-comment
//# sourceURL=ContentReplacerTest.js
